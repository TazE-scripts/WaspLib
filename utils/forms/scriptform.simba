(*
# Script Form
{ref}`Script Form` is a opinionated, `TLazForm` that you can setup and run in
a just a few lines.
```{figure} ../../images/basic_scriptform.png
A very basic `TScriptForm` with 3 tabs
```
This page is only about the very base of `TScriptForm`.

For information about pre-built panels you can find them on these pages:
- {ref}`House Form`
-
-
*)
{$DEFINE WL_SCRIPTFORM_INCLUDED}
{$INCLUDE_ONCE WaspLib/utils.simba}

type
(*
## TScriptForm
Main type for the {ref}`TScriptForm`.
*)
  TScriptForm = record
    Form: TLazForm;
    PageControl: TLazPageControl;
    Start: TLazButton;
  end;

(*
## Built-in Callbacks
{ref}`TScriptForm` has several built-in callbacks setup by default:
*)

(*
### ScriptForm.OnClose
```pascal
procedure TScriptForm.OnClose(sender: TLazObject; var closeAction: ELazFormCloseAction);
```
Callback called when the `TScriptForm.Form.OnClose` procedure.
This ensures the script is terminated when you close the form.

Closing the form programatically with `ScriptForm.Form.Close()` will also
terminate your script by default if you don't want this you will need to do
something similar to what {ref}`ScriptForm.OnStart` which does the following
when it runs:
```pascal
ScriptForm.Form.OnClose := nil;
ScriptForm.Form.Close();
```
*)
{$H-}
procedure TScriptForm.OnClose(sender: TLazObject; var closeAction: ELazFormCloseAction);
var
  i: Integer;
begin
  TerminateScript();
end;

(*
### ScriptForm.OnStart
```pascal
procedure TScriptForm.OnStart(sender: TLazObject);
```
This callback is ran on the `TScriptForm.Start.OnClick` procedure.
By default, it's only used to close/hide the form and ensure that
{ref}`ScriptForm.OnClose` doesn't run.

The recommended usage for scripts would be to override this to setup your script
variables when it runs before calling `inherited`, something like this:

Example:
```pascal
procedure TScriptForm.StartScript(sender: TLazObject); override;
begin
  CurrentTask := ETask(Self.TaskSelector.GetItemIndex());
  inherited;
end;
```
*)
procedure TScriptForm.OnStart(sender: TLazObject);
begin
  Self.Form.OnClose := nil;
  Self.Form.Close();
end;
{$H+}


(*
## ScriptForm.Setup
```pascal
procedure TScriptForm.Setup(caption: String = 'Script Form'; size: TPoint = [750, 500]; allowResize: Boolean = False);
```
Responsible for setting your TScriptForm up.
This sets up the sekeleton of your TScriptForm ready to take in tabs.
*)
procedure TScriptForm.Setup(caption: String = 'WaspLib');
var
  panel: TLazPanel;
  lbl: TLazLabel;
begin
  Self.Form := TLazForm.Create();
  Self.Form.Caption := caption + ' Settings';
  Self.Form.Width := 800;
  Self.Form.Height := 600;

  Self.Form.Constraints.MaxWidth := 800;
  Self.Form.Constraints.MinWidth := 800;
  Self.Form.Constraints.MaxHeight := 600;
  Self.Form.Constraints.MinHeight := 600;

  Self.Form.Position := ELazFormPosition.ScreenCenter;
  Self.Form.OnClose  := @Self.OnClose;

  Self.PageControl := TLazPageControl.Create(Self.Form);
  Self.PageControl.Parent := Self.Form;
  Self.PageControl.Align := ELazAlign.Client;
  Self.PageControl.Width := 800;
  Self.PageControl.Height := 570;

  panel := TLazPanel.Create(Self.Form);
  panel.Parent := Self.Form;
  panel.Align := ELazAlign.Bottom;
  panel.Height := 30;

  lbl := TLazLabel.Create(panel);
  lbl.Parent := panel;
  lbl.Caption := 'https://waspscripts.com';
  lbl.Align := ELazAlign.Left;
  lbl.BorderSpacing.Around := 4;
  lbl.BorderSpacing.Left := 6;
  lbl.SetURL();

  Self.Start := TLazButton.Create(panel);
  Self.Start.Parent := panel;
  Self.Start.Caption := 'Start';
  Self.Start.Align := ELazAlign.Right;
  Self.Start.OnClick := @Self.OnStart;
  Self.Start.BorderSpacing.Around := 2;
  Self.Start.BorderSpacing.Right := 6;
end;

(*
## ScriptForm.CreateTab
```pascal
function TScriptForm.CreateTab(caption: String): TLazTabSheet;
```
Methods to create and add tabs to `TScriptForm`.

This will create a new tab on the form and return it to you as the result so you
add controls to it.

Example:
```pascal
{$I WaspLib/osrs.simba}

var
  form: TScriptForm;
  selector: TCombobox;
  tab: TLazTabSheet;
begin
  form.Setup();
  tab := form.CreateTab('House');
  selector := TLazComboBox.CreateEx(tab);
  form.Run();
end.
```
*)
function TScriptForm.CreateTab(caption: String): TLazTabSheet;
var
  w, h: Integer;
begin
  w := Self.PageControl.Width;
  h := Self.PageControl.Height;

  Result := Self.PageControl.AddTab();
  Result.Caption := caption;
  Result.Width := w;
  Result.Height := h;

  Self.PageControl.ActiveTabIndex := 0;
end;

(*
## ScriptForm.AddTab
```pascal
procedure TScriptForm.AddTab(owner: Pointer);
```
Adds an already existing `TLazTabSheet` to the `TScriptForm`.
*)
procedure TScriptForm.AddTab(tab: TLazTabSheet);
begin
  tab.Parent := Self.PageControl;
  Self.PageControl.InsertComponent(tab);
end;


(*
## ScriptForm.Run
```pascal
procedure TScriptForm.Run();
```
Runs and shows your `TScriptForm` after it has been setup.
*)
procedure TScriptForm.Run();
begin
  try
    Self.Form.ShowModal();
  finally
    Self.Form.Free();
  end;
end;
